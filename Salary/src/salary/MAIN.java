/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package salary;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Seun Hak
 */
public class MAIN extends javax.swing.JFrame {

    /**
     * Creates new form MAIN
     */
    public MAIN() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        jLabel4 = new javax.swing.JLabel();
        txtSalary = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmdUpdate = new javax.swing.JButton();
        DateChooser1 = new com.toedter.calendar.JDateChooser();
        txtID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmdNew = new javax.swing.JButton();
        cmdAdd = new javax.swing.JButton();
        cmdDelect = new javax.swing.JButton();
        cmdLogout = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        txtTotal = new javax.swing.JLabel();
        cmdprint = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        cmdRefresh = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setText("Total:");

        txtSalary.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSalary.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtSalary.setText("   ");
        txtSalary.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        txtSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalaryActionPerformed(evt);
            }
        });
        txtSalary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSalaryKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Salary");

        cmdUpdate.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cmdUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Update.png"))); // NOI18N
        cmdUpdate.setText("Update");
        cmdUpdate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        cmdUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdUpdateActionPerformed(evt);
            }
        });

        DateChooser1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        DateChooser1.setDateFormatString(" yyyy-MM-dd");
        DateChooser1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtID.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtID.setText(" ");
        txtID.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        txtID.setFocusable(false);
        txtID.setMargin(new java.awt.Insets(5, 2, 2, 2));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("ID");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Date");

        cmdNew.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cmdNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/New.png"))); // NOI18N
        cmdNew.setText("New");
        cmdNew.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        cmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewActionPerformed(evt);
            }
        });

        cmdAdd.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cmdAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Add.png"))); // NOI18N
        cmdAdd.setText("Add");
        cmdAdd.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        cmdAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddActionPerformed(evt);
            }
        });

        cmdDelect.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cmdDelect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Delect.png"))); // NOI18N
        cmdDelect.setText("Delect");
        cmdDelect.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        cmdDelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDelectActionPerformed(evt);
            }
        });

        cmdLogout.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cmdLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Logou.png"))); // NOI18N
        cmdLogout.setText("Log Out");
        cmdLogout.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        cmdLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLogoutActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Date", "Salary"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableMouseReleased(evt);
            }
        });
        table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
        }

        txtTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtTotal.setForeground(new java.awt.Color(0, 0, 255));

        cmdprint.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cmdprint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Printer.png"))); // NOI18N
        cmdprint.setText("Print");
        cmdprint.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        cmdprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdprintActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Search-icon.png"))); // NOI18N
        jLabel1.setText("Seach");

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        cmdRefresh.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cmdRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Button-Refresh-icon.png"))); // NOI18N
        cmdRefresh.setText("Refresh");
        cmdRefresh.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        cmdRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRefreshActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenu5.setText("Exit");
        jMenu1.add(jMenu5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtSalary)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(cmdNew)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmdAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmdUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmdDelect, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtID)))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmdLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmdprint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmdRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(59, 59, 59))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(DateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmdNew, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmdAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmdUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmdDelect, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmdLogout)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmdprint)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmdRefresh)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void select() throws ParseException, SQLException {
        DecimalFormat d = new DecimalFormat("####");
        mod = (DefaultTableModel) table.getModel();
        int indext = table.getSelectedRow();
        txtID.setText(mod.getValueAt(indext, 0).toString());
        Date dat = new SimpleDateFormat("yyyy-mm-dd").parse((String) mod.getValueAt(indext, 1));
        DateChooser1.setDate(dat);
        txtSalary.setText(mod.getValueAt(indext, 2).toString());

        // txtTotal.setText(mod.getValueAt(indext, 0).toString());
    }

    private void Id_show() throws SQLException {
        Statement s = Datacon.getDatacon().createStatement();
        ResultSet r = s.executeQuery("select id from salary");
        if (r.last()) {
            txtID.setText(r.getString("ID"));

        } else {
            s.close();
            r.close();
        }
    }

    private void Add() throws SQLException {
        String ID = txtID.getText();
        String Salary = txtSalary.getText();
        String Dat = ((JTextField) DateChooser1.getDateEditor().getUiComponent()).getText();
        try (Statement s = Datacon.getDatacon().createStatement()) {
            s.execute("INSERT into salary(Dat,salary)VALUES('" + Dat + "','" + Salary + "')");
            String st[] = {ID, Dat, Salary};
            mod = (DefaultTableModel) table.getModel();
            mod.addRow(st);
            s.close();
        }

        mod.setRowCount(0);
        windowsOpen();

    }
    DecimalFormat df = new DecimalFormat("$,###,##");

    public void Total() {
        Statement s;
        try {
            s = Datacon.getDatacon().createStatement();
            ResultSet r = s.executeQuery("SELECT SUM(salary) As total FROM salary");
            if (r.first()) {
                double salary = r.getDouble("total");
                double total = salary++;

//                df.format(total);
                txtTotal.setText("" + df.format(total));

            } else {

                windowsOpen();
                s.close();
                r.close();

            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }

    public void defaulID() throws SQLException {

        Statement s = Datacon.getDatacon().createStatement();
        s.execute("ALTER TABLE `salary`\n" + "AUTO_INCREMENT=1;");
    }

    public void update() throws SQLException {
        int click = JOptionPane.showConfirmDialog(this, "Aer you sur");
        if (click == JOptionPane.YES_OPTION) {

            String Dat = ((JTextField) DateChooser1.getDateEditor().getUiComponent()).getText();
            String ID = txtID.getText();
            double salary = Double.valueOf(txtSalary.getText());
            Statement s = Datacon.getDatacon().createStatement();

            s.execute("UPDATE salary SET Dat='" + Dat + "',Salary='" + salary + "' where id='" + ID + "'");
            s.close();
        }

    }

    public void delect() throws SQLException {
        int click = JOptionPane.showConfirmDialog(this, "Aer you sur");
        if (click == JOptionPane.YES_OPTION) {
            mod = (DefaultTableModel) table.getModel();
            int[] rowselct = table.getSelectedRows();
            int id[] = new int[rowselct.length];
            for (int i = 0; i < id.length; i++) {
                id[i] = Integer.valueOf("" + mod.getValueAt(rowselct[i], 0));
            }

            try (Statement s = Datacon.getDatacon().createStatement()) {
                for (int i = 0; i < id.length; i++) {
                    s.execute("DELETE from salary where id=" + id[i]);
                }
            }

            mod.setRowCount(0);
            windowsOpen();
            defaulID();

        }
    }

    public void sel() {

        try {
            int row = table.getSelectedRow();
            String Table_click = (table.getModel().getValueAt(row, 0).toString());
            Statement s = Datacon.getDatacon().createStatement();
            ResultSet r = s.executeQuery("Select* from salary where id='" + Table_click + "'");
            if (r.first()) {
                do {
                    DecimalFormat dff = new DecimalFormat();

                    txtID.setText(r.getString("id"));
                    DateChooser1.setDateFormatString(r.getDate("dat").toString());
                    txtSalary.setText(r.getString("salary"));

                } while (r.next());
                r.close();
                s.close();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }

    }

    public void windowsOpen() {

        try {
            Statement s = Datacon.getDatacon().createStatement();
            ResultSet r = s.executeQuery("Select* from salary");
            if (r.first()) {
                do {
                    DecimalFormat f = new DecimalFormat("##,##$");
                    String ID = r.getString("ID");
                    String Date = r.getString("dat");
                    double salary = r.getDouble("salary");

                    String st[] = {ID, Date, f.format(salary)};
                    mod = (DefaultTableModel) table.getModel();
                    mod.addRow(st);
                } while (r.next());
                r.close();
                s.close();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }

    }
//    public  void total() {
//        try {
//            Statement s=Datacon.getDatacon().createStatement();
//            ResultSet r=s.executeQuery("SELECT SUM(salary) FROM salary");
//            if(r.next()){
//                String Sum=r.getString("SUM(salary)");
//                txtTotal.setText(String.valueOf(Sum));
//              
//            }
//        } catch (SQLException ex) {
//            Logger.getLogger(MAIN.class.getName()).log(Level.SEVERE, null, ex);
//        }
//       
//    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        if (Datacon.getDatacon() == null) {
            Login op = new Login();
            op.setVisible(true);
            this.dispose();
        } else {
            try {
                windowsOpen();
                Id_show();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            }
        }

        Total();


    }//GEN-LAST:event_formWindowOpened
    DefaultTableModel mod;

    private void New() {
        txtSalary.setRequestFocusEnabled(true);
        DateChooser1.setRequestFocusEnabled(true);

    }

    public void Clean() {
        txtID.setText(null);
        txtSalary.setText(null);
        // txtTotal.setText(null);
        DateChooser1.setDate(null);

    }
    private void cmdDelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDelectActionPerformed
        try {
            delect();
            Total();
            Id_show();
            // TODO add your handling code here:
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_cmdDelectActionPerformed

    private void cmdAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAddActionPerformed

        try {
            Add();
            Total();
            Id_show();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());

        }
        mod.setRowCount(0);
        windowsOpen();

        // TODO add your handling code here:
    }//GEN-LAST:event_cmdAddActionPerformed

    private void cmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewActionPerformed
        New();
        Clean();
        try {
            Id_show();

            // TODO add your handling code here:
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_cmdNewActionPerformed

    private void cmdUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdUpdateActionPerformed
        try {
            update();
            Total();
            Id_show();
            // TODO add your handling code here:
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        mod.setRowCount(0);
        windowsOpen();
    }//GEN-LAST:event_cmdUpdateActionPerformed

    private void cmdLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLogoutActionPerformed
        Login obj = new Login();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cmdLogoutActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
//        try {
//            try {
//                select();
//                // TODO add your handling code here:
//            } catch (SQLException ex) {
//                Logger.getLogger(MAIN.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        } catch (ParseException ex) {
//            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
//        }
        sel();


    }//GEN-LAST:event_tableMouseClicked
    private ArrayList<Data> data() {
        ArrayList<Data> arr = new ArrayList<>();
        for (int i = 0; i < table.getRowCount(); i++) {
            String ID = (String) table.getValueAt(i, 0);
            String date = (String) table.getValueAt(i, 1);
            String salary = (String) table.getValueAt(i, 2);

            Data tepmp = new Data(ID, date, salary);
            arr.add(tepmp);

        }
        return arr;
    }

    private void printReport() {
        try {
            JasperReport jp = JasperCompileManager.compileReport("Report/report1.jrxml");
            HashMap para = new HashMap();

            SimpleDateFormat df = new SimpleDateFormat("yyyy-mm-dd");

//             para.put("id", table.getValueAt(ERROR, NORMAL))
//             para.put("ID",)
            String User = Datacon.getUser();
            JRBeanCollectionDataSource jcd = new JRBeanCollectionDataSource(data());
            JasperPrint print = JasperFillManager.fillReport(jp, para, jcd);
            JasperViewer.viewReport(print, false);
        } catch (JRException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }
    private void cmdprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdprintActionPerformed
        printReport();
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdprintActionPerformed

    private void txtSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSalaryActionPerformed

    private void tableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMousePressed
        // TODO add your handling code here:
        try {
            select();
            // TODO add your handling code here:
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        } catch (SQLException ex) {
            Logger.getLogger(MAIN.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tableMousePressed

    private void tableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseReleased
        try {
            select();
            // TODO add your handling code here:
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        } catch (SQLException ex) {
            Logger.getLogger(MAIN.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_tableMouseReleased

    private void tableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableKeyPressed
        // TODO add your handling code here:
        sel();
    }//GEN-LAST:event_tableKeyPressed

    private void tableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableKeyReleased
        sel();
    }//GEN-LAST:event_tableKeyReleased

    private void txtSalaryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSalaryKeyTyped

        // TODO add your handling code here:
    }//GEN-LAST:event_txtSalaryKeyTyped

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        try {
            String Seach = txtSearch.getText().toLowerCase();
            Statement s = Datacon.getDatacon().createStatement();
            ResultSet r = s.executeQuery("select * from salary where dat='" + Seach + "' OR salary='" + Seach + "' or id='" + Seach + "'");
            if (r.first()) {
                do {
                    txtID.setText(r.getString("id"));
                    DateChooser1.setDateFormatString(r.getDate("dat").toString());
                    txtSalary.setText(r.getString("salary"));
                    mod.setRowCount(0);
                    DecimalFormat f = new DecimalFormat("##,##$");
                    String ID = r.getString("ID");
                    String Date = r.getString("dat");
                    double salary = r.getDouble("salary");

                    String st[] = {ID, Date, f.format(salary)};
                    mod = (DefaultTableModel) table.getModel();
                    mod.addRow(st);

                } while (r.next());

                s.close();
                r.close();

            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped

    }//GEN-LAST:event_txtSearchKeyTyped

    private void cmdRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRefreshActionPerformed
        // TODO add your handling code here:
        mod.setRowCount(0);
        windowsOpen();
        txtSearch.setText(null);
        txtSalary.setText(null);
        DateChooser1.setDate(null);
    }//GEN-LAST:event_cmdRefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MAIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MAIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MAIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MAIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MAIN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateChooser1;
    private javax.swing.JButton cmdAdd;
    private javax.swing.JButton cmdDelect;
    private javax.swing.JButton cmdLogout;
    private javax.swing.JButton cmdNew;
    private javax.swing.JButton cmdRefresh;
    private javax.swing.JButton cmdUpdate;
    private javax.swing.JButton cmdprint;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtSalary;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JLabel txtTotal;
    // End of variables declaration//GEN-END:variables
}
